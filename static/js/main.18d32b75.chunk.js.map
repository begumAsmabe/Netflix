{"version":3,"sources":["Components/NavBar/NavBar.js","constants/constants.js","Components/axios.js","Components/Banner/Banner.js","Components/RowPost/RowPost.js","Urls.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","src","alt","API_KEY","imageUrl","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","response","console","log","data","results","responses","Math","floor","random","length","style","backgroundImage","backdrop_path","title","overview","RowPost","props","movies","setMovies","urlId","setUrlId","url","res","map","obj","i","onClick","id","resultslength","isSmall","videoId","key","opts","height","width","playerVars","autoplay","originals","action","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18d32b75.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./NavBar.css\"\r\nfunction NavBar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"Netflix Logo\" />\r\n             <img className=\"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"Avatar\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export const baseUrl='https://api.themoviedb.org/3';\r\nexport const API_KEY =\"f32ff0df0b71f334e13511c784a4173b\";\r\nexport const imageUrl =\"https://image.tmdb.org/t/p/original\"","import axios from 'axios'\r\nimport {baseUrl} from '../constants/constants'\r\nconst instance = axios.create({\r\n    baseURL:baseUrl,\r\n\r\n});\r\n\r\nexport default instance;","import React,{useEffect, useState} from 'react'\r\nimport {API_KEY,imageUrl} from '../../constants/constants'\r\nimport axios from '../axios'\r\nimport './Banner.css'\r\n\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState()\r\n    useEffect(() => {\r\n        axios.get(`trending/all/week?api_key=${API_KEY}&language=en-US`).then((response)=>{\r\n        console.log(response.data.results[0]);\r\n            const responses=response.data.results[Math.floor(Math.random()*response.data.results.length)]\r\n            setMovie(responses)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div\r\n        style={{backgroundImage:`url(${movie ? imageUrl+movie.backdrop_path:\"\"})`}}\r\n        className='banner'>\r\n            <div className='content'> \r\n                <h1 className='title'>{movie ? movie.title : \" \"}</h1>\r\n                <div className='banner-buttons'>\r\n                     <button className='button'>Play</button>\r\n                     <button className='button'>My list  </button>\r\n                </div>\r\n                <h1 className=\"discription\">\r\n                    {movie ? movie.overview : \" \"}\r\n                </h1>\r\n                <div className=\"fade_bottom\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import axios from '../axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { imageUrl,API_KEY } from '../../constants/constants'\r\nimport Youtube from 'react-youtube'\r\nimport './RowPost.css'\r\nfunction RowPost(props) {\r\n    const [movies, setMovies] = useState([])\r\n    const [urlId, setUrlId] = useState('')\r\n    useEffect(() => { \r\n        axios.get(props.url).then(res=>{\r\n            console.log(res.data);\r\n            setMovies(res.data.results)\r\n        })\r\n    }, [])\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n      };\r\n  const handleClick=(id)=>{\r\n               console.log(id);\r\n               axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{\r\n                   if(response.data.resultslength!==0)\r\n\r\n                   {\r\n                       setUrlId(response.data.results[0])\r\n                   }\r\n                   else\r\n                   {\r\n                       console.log('No videos to play');\r\n                   }\r\n               })\r\n  }\r\n    return (\r\n        \r\n        <div className='row'>\r\n            <h2>{props.title}</h2>\r\n            <div className='posters'>\r\n                {movies.map((obj,i)=>\r\n                \r\n                    < img onClick={()=>handleClick(obj.id)} key={i} className={ props.isSmall?'smallPoster':'poster'} alt='poster' src={`${imageUrl+obj.backdrop_path}`}/>\r\n                )}\r\n                \r\n                \r\n            </div>\r\n          {urlId && <   Youtube videoId={urlId.key} opts={opts}/>}  \r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default RowPost\r\n","import {API_KEY} from './constants/constants'\r\nexport const originals = `discover/tv?api_key=${API_KEY}&with_networks=213`\r\nexport const action = `/discover/movie?api_key=${API_KEY}&with_genres=28`\r\n   ","import React from 'react'\nimport NavBar from './Components/NavBar/NavBar'\nimport './App.css'\nimport Banner from './Components/Banner/Banner'\nimport RowPost from './Components/RowPost/RowPost'\nimport { action, originals } from './Urls'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <Banner/>\n      <RowPost title='Netflix Originals' url={originals} />\n      <RowPost title='Action' isSmall url={action}/>\n      \n      \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}